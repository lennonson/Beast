{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nvar zero = function (n, max) {\n  n = n.toString(16).toUpperCase();\n  while (n.length < max) {\n    n = '0' + n;\n  }\n  return n;\n};\n\nmodule.exports = function (buffer) {\n  var rows = Math.ceil(buffer.length / 16);\n  var last = buffer.length % 16 || 16;\n  var offsetLength = buffer.length.toString(16).length;\n  if (offsetLength < 6) offsetLength = 6;\n\n  var i;\n  var str = '';\n\n  var b = 0;\n  var lastBytes;\n  var lastSpaces;\n  var v;\n\n  for (i = 0; i < rows; i++) {\n    str += '\\u001b[36m' + zero(b, offsetLength) + '\\u001b[0m  ';\n    lastBytes = i === rows - 1 ? last : 16;\n    lastSpaces = 16 - lastBytes;\n\n    var j;\n    for (j = 0; j < lastBytes; j++) {\n      str += ' ' + zero(buffer[b], 2);\n      b++;\n    }\n\n    for (j = 0; j < lastSpaces; j++) {\n      str += '   ';\n    }\n\n    b -= lastBytes;\n    str += '   ';\n\n    for (j = 0; j < lastBytes; j++) {\n      v = buffer[b];\n      str += (v > 31 && v < 127) || v > 159 ? String.fromCharCode(v) : '.';\n      b++;\n    }\n\n    str += '\\n';\n  }\n\n  return str;\n};\n"]}